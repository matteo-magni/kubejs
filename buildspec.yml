version: 0.2

phases:
  install:
    commands:
      - mkdir -p bin
      - curl -L -o bin/kompose https://github.com/kubernetes/kompose/releases/download/v1.21.0/kompose-linux-amd64
      - chmod +x bin/kompose
      - curl -L -o bin/kubectl "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x bin/kubectl
      - apt-get update && apt-get install -y gettext-base
      - ./bin/kompose version
      - ./bin/kubectl version --client
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - echo Generating docker-compose.yml
      - envsubst < docker-compose.yml.tpl > docker-compose.yml

      - echo Converting docker-compose.yml to kubernetes files
      - mkdir -p kubefiles
      - ./bin/kompose convert -f docker-compose.yml -o kubefiles
      - find kubefiles -type f | xargs -r -n1 cat
  build:
    commands:
      - echo Build started on `date`

      - echo Building the Docker images
      - docker build -t $NGINX_REPO_NAME:$IMAGE_TAG -f Dockerfile.nginx .
      - docker build -t $NODEJS_REPO_NAME:$IMAGE_TAG -f Dockerfile.nodejs .

      - echo Tagging the Docker images
      - docker tag $NGINX_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$NGINX_REPO_NAME:$IMAGE_TAG
      - docker tag $NODEJS_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$NODEJS_REPO_NAME:$IMAGE_TAG

      - echo Pushing the Docker images
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$NGINX_REPO_NAME:$IMAGE_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$NODEJS_REPO_NAME:$IMAGE_TAG

      - echo Set kubernetes config
      - ./bin/kubectl config set-cluster codebuild --server="$K8S_CLUSTER"
      - ./bin/kubectl config set-credentials codebuild --username="$K8S_USERNAME" --password="$K8S_PASSWORD"
      - ./bin/kubectl config set-context codebuild --cluster=codebuild --user=codebuild
      - ./bin/kubectl config use-context codebuild
      
      - echo Update kubernetes secret for ECR
      - ./bin/kubectl delete secret $REGISTRY_SECRET_NAME || true
      - ./bin/kubectl create secret docker-registry $REGISTRY_SECRET_NAME --docker-server=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com --docker-username=AWS --docker-password="$(aws ecr get-login-password --region $AWS_DEFAULT_REGION)"

    post_build:
      commands:
        - echo Deploy started on `date`

        - echo Apply kubernetes deplyments and services files
        - find kubefiles -type f -name "*.yaml" | xargs -r -n1 ./bin/kubectl apply -f
